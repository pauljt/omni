
CSPViolation = The page’s settings blocked the loading of a resource: %1$S
CSPViolationWithURI = The page’s settings blocked the loading of a resource at %2$S (“%1$S”).
CSPROViolation = A violation occurred for a report-only CSP policy (“%1$S”). The behavior was allowed, and a CSP report was sent.
CSPROViolationWithURI = The page’s settings observed the loading of a resource at %2$S (“%1$S”). A CSP report is being sent.
triedToSendReport = Tried to send report to invalid URI: “%1$S”
couldNotParseReportURI = couldn’t parse report URI: %1$S
couldNotProcessUnknownDirective = Couldn’t process unknown directive ‘%1$S’
ignoringUnknownOption = Ignoring unknown option %1$S
ignoringDuplicateSrc = Ignoring duplicate source %1$S
ignoringSrcFromMetaCSP = Ignoring source ‘%1$S’ (Not supported when delivered via meta element).
ignoringSrcWithinScriptStyleSrc = Ignoring “%1$S” within script-src or style-src: nonce-source or hash-source specified
ignoringSrcForStrictDynamic = Ignoring “%1$S” within script-src: ‘strict-dynamic’ specified
ignoringStrictDynamic = Ignoring source “%1$S” (Only supported within script-src). 
strictDynamicButNoHashOrNonce = Keyword ‘strict-dynamic’ within “%1$S” with no valid nonce or hash might block all scripts from loading
reportURInotHttpsOrHttp2 = The report URI (%1$S) should be an HTTP or HTTPS URI.
reportURInotInReportOnlyHeader = This site (%1$S) has a Report-Only policy without a report URI. CSP will not block and cannot report violations of this policy.
failedToParseUnrecognizedSource = Failed to parse unrecognized source %1$S
inlineScriptBlocked = An attempt to execute inline scripts has been blocked
inlineStyleBlocked = An attempt to apply inline style sheets has been blocked
scriptFromStringBlocked = An attempt to call JavaScript from a string (by calling a function like eval) has been blocked
upgradeInsecureRequest = Upgrading insecure request ‘%1$S’ to use ‘%2$S’
ignoreSrcForDirective = Ignoring srcs for directive ‘%1$S’
hostNameMightBeKeyword = Interpreting %1$S as a hostname, not a keyword. If you intended this to be a keyword, use ‘%2$S’ (wrapped in single quotes).
notSupportingDirective = Not supporting directive ‘%1$S’. Directive and values will be ignored.
blockAllMixedContent = Blocking insecure request ‘%1$S’.
ignoringDirectiveWithNoValues = Ignoring ‘%1$S’ since it does not contain any parameters.
ignoringReportOnlyDirective = Ignoring sandbox directive when delivered in a report-only policy ‘%1$S’
deprecatedReferrerDirective = Referrer Directive ‘%1$S’ has been deprecated. Please use the Referrer-Policy header instead.
IgnoringSrcBecauseOfDirective=Ignoring ‘%1$S’ because of ‘%2$S’ directive.

couldntParseInvalidSource = Couldn’t parse invalid source %1$S
couldntParseInvalidHost = Couldn’t parse invalid host %1$S
couldntParseScheme = Couldn’t parse scheme in %1$S
couldntParsePort = Couldn’t parse port in %1$S
duplicateDirective = Duplicate %1$S directives detected.  All but the first instance will be ignored.
deprecatedChildSrcDirective = Directive ‘%1$S’ has been deprecated. Please use directive ‘worker-src’ to control workers, or directive ‘frame-src’ to control frames respectively.
couldntParseInvalidSandboxFlag = Couldn’t parse invalid sandbox flag ‘%1$S’
